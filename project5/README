The goal of this project was to create a virtual file system. Make_fs will initialize data used for a file system, create a super block at index 0 as well as a directory for creating a maximum of 64 files and a FAT that points to files and links them to other block that are a part of the files as well as free spaces on the disk available to be written. Mount fs brings the data into memory for use as well as opens the disk, while umount_fs unmounts the file system by writing to the disk and closing the the disk. The file system can also open files by allocating one of 32 file descriptors to be used to point to files and close file descriptors when done. It can also read a certain number of bytes with fs_read and write to a file using a certain number of bytes as long as there is room on the disk. Fs_create will create a file by allocating a directory entry for it as well as a head block for it, while fs_delete will un-allocate that data. Fs_get_filesize will return the size of a file in bytes, fs_listfiles will return all files currently on the disk, and truncate will cut off the size of a file by to have a file with a specified length. Fs_lseek sets the offset to somewhere in the file to read and write from a certain place. Fs_truncate frees space at the end of a file.

Currently, truncate does not function properly. Further work can also be done to reduce repetetive code.
~                                            
